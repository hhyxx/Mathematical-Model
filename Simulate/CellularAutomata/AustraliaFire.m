aus = load('AustraliaData');    %
[m,n] = size(aus);  %�����������һ�����ݰ� Ȼ��ͨ����������ȥ����ɭ�֣�


% ���� aus ������
S = 2*((rand(m,n)<sqrt(aus)) & (aus<1));   %��Ϊ����ǰ���  ������仰�������׵�   ��ͬ��Ҳ���ж���䣬Ȼ�����2��������������  �������ж����
S(aus>1) = -1;   %���������������Ǵ���1�ĸ�ֵΪ-1  ���Ǻ���ġ��ǡ���     ��������֪��

Plight = 1e-6;    % ��ȼ�ĸ���  
Pgrowth = 0;      % �������� 

% �ھӷ�λd�͵�ȼ����p 
% d = {[1,0], [0,1], [-1,0], [0,-1], [1,1], [-1,1], [-1,-1], [1,-1]};
%p = [ones(1,4), ones(1,4)*(sqrt(1/2)-1/2)];
% ���Ƿ������
d = {[1,0], [0,1], [-1,0], [0,-1], [1,1], [-1,1], [-1,-1], [1,-1], [0,-2]};
p = [ 0.80,  0.30,   0.80,   1.00,  0.12,   0.12,    0.30,   0.30,    0.8]; 

% ��= -1, ��(E)= 0, ��F��= 1, ����T��=?2  �����ǡ���ʾ�ǰĴ����ǵĲ��ֻ�ˮ��
U = -1; E = 0; F = 1; T = 2; 
isE = (S==E); isF = (S==F); isT = (S==T); isU = (S==U);

R = isF+ isU;   %���ǰĴ����ǵĲ���+��Ĳ���   ����R������1 Ҳ������2.��ͬ�����ص��� ��һ����
G = isT + isU;   %���ǰĴ����ǵĲ���+���Ĳ���
B = isU;        %ֱ�ӾͲ��ǰĴ����ǵĲ���
%���������ں���Ҳ�õ���

imh = image([112,154],[-44,-10],(cat(3,R,G,B)));    %�Ұ�flipudȥ�� û�б仯  �б仯 ���ǰ�ͼ��ת������

%
hold on
load coastlines   %����ȷ������������    ͬ��Ҳ�����������ݡ������Ǹ����ݻ���û�п���
plot(coastlon, coastlat, 'k', 'linewidth',0.2);    %��ô˵  �Ҿ�������Ƚ����ס�  ���������ͼ
axis image
axis([112 154 -44 -10])
%  �⼸�о��ǿ̻������˰Ĵ����ǵ� ������
%  ��ʵҲ�ǲ��ǿ̻��������������ͼ�п�ѡ�������Ĵ����ǵ��ǿ�ط��ˡ����ǻ���һЩ�ط��������ò��˵ġ�������ǰ��28�оͳ�ȥ��

for t = 1:300       % ���for �ͺ��б�Ҫȥ��һ���ġ�����  ת

    % �����ھ����ܴ����Ż�ĸ���   
    sum = zeros(size(S));
    for j = 1:length(d)
        sum = sum + p(j) * (circshift(S,d{j})==F);
    end
    
    % �ֱ��ҳ�����״̬��Ԫ��
    isE = (S==E); isF = (S==F); isT = (S==T); isU = (S==U);
    
    % �ҳ������Ż�������Ԫ��
    ignite = rand(m,n)<sum | (rand(m,n)<Plight);  
    
    % ����1:�Ż�
    Rule1 = T*(isT & ~ignite) + F*(isT & ignite);
    % ����2: ȼ��
    Rule2 = F*isF - F*isF;
    % ����3:����
    Rule3 = T*(isE & rand(m,n)<Pgrowth);
    % ����4: ���ǡ�����   
    Rule4 = U*isU;
    
    S = Rule1 + Rule2 + Rule3 + Rule4;
    
    R = isF + R - 0.02.*(R>0&R<=1);   %����Ǻ�ߵķ�Χ Ҳ���൱��һ����ľ����Ҫ�ն�� ��
    R(R<0)=0;     %��һ���ǲ�����ɾȥ�ģ���Ϊ����������������������Ϊ�п��ܳ�Ϊ-1.����Ϊ���ա�
    G = isT + isU;      %%%%�⼸���ǹؼ�  �ؼ��Ĺؼ�  ���ǲ��ܹ���⡣����
    set(imh, 'cdata', flipud(cat(3, R+isU, G, B)) )   %ΪʲôҪ���µߵ��أ�  flipud ��ΪҪ�������ϡ� 
    drawnow
end
